'use client'

import { useState, useEffect } from 'react'
import { Upload, FileText, ArrowRight, ArrowLeft, Plus, X } from 'lucide-react'
import mammoth from 'mammoth'

interface TranscriptUploadProps {
  onComplete: (transcripts: string[]) => void
  onBack: () => void
  initialValue?: string[]
}

export function TranscriptUpload({ onComplete, onBack, initialValue = [] }: TranscriptUploadProps) {
  const [transcripts, setTranscripts] = useState<string[]>(initialValue)
  const [currentTranscript, setCurrentTranscript] = useState('')
  const [isUploading, setIsUploading] = useState(false)

  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ initialValue
  useEffect(() => {
    setTranscripts(initialValue)
  }, [initialValue])

  const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {
    const files = Array.from(event.target.files || [])
    if (files.length === 0) return

    setIsUploading(true)
    try {
      const newTranscripts = await Promise.all(
        files.map(async (file) => {
          try {
            let text = ''
            
            if (file.name.endsWith('.docx')) {
              // –û–±—Ä–∞–±–æ—Ç–∫–∞ .docx —Ñ–∞–π–ª–æ–≤
              const arrayBuffer = await file.arrayBuffer()
              const result = await mammoth.extractRawText({ arrayBuffer })
              text = result.value
            } else {
              // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
              text = await file.text()
            }
            
            return text
          } catch (error) {
            console.error(`Error reading file ${file.name}:`, error)
            return null
          }
        })
      )

      const validTranscripts = newTranscripts.filter(t => t !== null) as string[]
      setTranscripts(prev => [...prev, ...validTranscripts])
    } finally {
      setIsUploading(false)
    }
  }

  const addTranscript = () => {
    if (currentTranscript.trim()) {
      setTranscripts(prev => [...prev, currentTranscript.trim()])
      setCurrentTranscript('')
    }
  }

  const removeTranscript = (index: number) => {
    setTranscripts(prev => prev.filter((_, i) => i !== index))
  }


  const handleSubmit = () => {
    if (transcripts.length > 0) {
      onComplete(transcripts)
    }
  }

  return (
    <div className="max-w-6xl mx-auto space-y-8">
      <div className="text-center space-y-4">
        <div className="flex justify-center">
          <div className="flex h-16 w-16 items-center justify-center rounded-full bg-primary/10">
            <Upload className="h-8 w-8 text-primary" />
          </div>
        </div>
        <h2 className="text-3xl font-bold text-foreground">–ó–∞–≥—Ä—É–∑–∫–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–æ–≤</h2>
        <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
          –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—ã –∏–Ω—Ç–µ—Ä–≤—å—é –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∏—Ö –≤—Ä—É—á–Ω—É—é. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç—ã: .txt, .md, .docx
        </p>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
        {/* File Upload */}
        <div className="space-y-4">
          <h3 className="text-xl font-semibold text-foreground">–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤</h3>
          <div className="border-2 border-dashed border-muted rounded-lg p-8 text-center hover:border-primary/50 transition-colors">
            <Upload className="h-12 w-12 text-muted-foreground mx-auto mb-4" />
            <p className="text-muted-foreground mb-4">
              –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤ —Å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞–º–∏
            </p>
            <p className="text-sm text-muted-foreground mb-4">
              –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: .txt, .md, .docx
            </p>
            <input
              type="file"
              accept=".txt,.md,.docx"
              multiple
              onChange={handleFileUpload}
              className="hidden"
              id="file-upload"
              name="file-upload"
            />
            <label
              htmlFor="file-upload"
              className="inline-flex items-center px-4 py-2 bg-primary text-primary-foreground rounded-lg hover:bg-primary/90 cursor-pointer transition-colors"
            >
              –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª—ã
            </label>
            {isUploading && (
              <p className="text-sm text-muted-foreground mt-2">–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤...</p>
            )}
          </div>
          
        </div>

        {/* Manual Input */}
        <div className="space-y-4">
          <h3 className="text-xl font-semibold text-foreground">–†—É—á–Ω–æ–π –≤–≤–æ–¥</h3>
          <textarea
            value={currentTranscript}
            onChange={(e) => setCurrentTranscript(e.target.value)}
            placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞ –∑–¥–µ—Å—å..."
            className="w-full h-48 p-4 border border-muted rounded-lg resize-none focus:border-primary focus:ring-2 focus:ring-primary/20 transition-colors"
            id="transcript-input"
            name="transcript-input"
          />
          <button
            onClick={addTranscript}
            disabled={!currentTranscript.trim()}
            className="w-full inline-flex items-center justify-center px-4 py-2 bg-primary text-primary-foreground rounded-lg hover:bg-primary/90 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
          >
            <Plus className="h-4 w-4 mr-2" />
            –î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç
          </button>
        </div>
      </div>

      {/* Transcripts List */}
      {transcripts.length > 0 && (
        <div className="space-y-4">
          <h3 className="text-xl font-semibold text-foreground">
            –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—ã ({transcripts.length})
          </h3>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            {transcripts.map((transcript, index) => (
              <div key={index} className="border border-muted rounded-lg p-4 relative">
                <div className="flex items-start justify-between mb-2">
                  <span className="text-sm font-medium text-foreground">
                    –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç #{index + 1}
                  </span>
                  <button
                    onClick={() => removeTranscript(index)}
                    className="text-muted-foreground hover:text-destructive transition-colors"
                  >
                    <X className="h-4 w-4" />
                  </button>
                </div>
                <p className="text-sm text-muted-foreground line-clamp-3">
                  {transcript.substring(0, 200)}...
                </p>
                <div className="mt-2 text-xs text-muted-foreground">
                  {transcript.length} —Å–∏–º–≤–æ–ª–æ–≤
                </div>
              </div>
            ))}
          </div>
        </div>
      )}

      {/* Navigation */}
      <div className="flex justify-between items-center pt-8">
        <button
          onClick={onBack}
          className="inline-flex items-center px-4 py-2 border border-muted text-muted-foreground rounded-lg hover:bg-muted/50 transition-colors"
        >
          <ArrowLeft className="h-4 w-4 mr-2" />
          –ù–∞–∑–∞–¥
        </button>
        <button
          onClick={handleSubmit}
          disabled={transcripts.length === 0}
          className="inline-flex items-center px-6 py-2 bg-primary text-primary-foreground rounded-lg hover:bg-primary/90 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
        >
          –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
          <ArrowRight className="h-4 w-4 ml-2" />
        </button>
      </div>

      {/* Tips */}
      <div className="bg-muted/30 rounded-lg p-6">
        <h3 className="text-lg font-semibold text-foreground mb-3">üí° –°–æ–≤–µ—Ç—ã –ø–æ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞–º</h3>
        <ul className="space-y-2 text-muted-foreground">
          <li>‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—ã —Å–æ–¥–µ—Ä–∂–∞—Ç –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–Ω—Ç–µ—Ä–≤—å—é</li>
          <li>‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 3-5 –∏–Ω—Ç–µ—Ä–≤—å—é –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞</li>
          <li>‚Ä¢ –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞ —Ç–æ–º –∂–µ —è–∑—ã–∫–µ, —á—Ç–æ –∏ –±—Ä–∏—Ñ</li>
          <li>‚Ä¢ –£–¥–∞–ª–∏—Ç–µ –ª–∏—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π</li>
          <li>‚Ä¢ –ö–∞–∂–¥—ã–π —Ñ–∞–π–ª –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ–¥–Ω–æ –∏–Ω—Ç–µ—Ä–≤—å—é</li>
          <li>‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è Word –¥–æ–∫—É–º–µ–Ω—Ç—ã (.docx) - —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑–≤–ª–µ—á–µ–Ω</li>
        </ul>
      </div>
    </div>
  )
}
